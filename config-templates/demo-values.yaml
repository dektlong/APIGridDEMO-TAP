clusters:
  
  view:             # TAP view profile installed
    name: 
    provider:       #accepted values: aks,eks,gke 
    nodes: 4
    region:         #accepted values for AKS provider: westus,ukwest,germanynorth,eastasia,australiasoutheast 
                    #accpeted values for EKS provider: us-east-1,us-west-1,eu-west-2,eu-central-1,ap-southeast1,ap-southeast-2 
                    #accpeted values for GKE provider: us-central1,europe-west2,europe-west3,asia-southeast1,australia-southeast1

                    #selected region is also used to provision cloud postgres (rabbitmq is always oncluster)
  
  dev:              # TAP interate profile installed
    name: 
    provider:
    nodes: 4 
    region:
  
  stage:            #TAP build profile installed
    name: 
    provider: 
    nodes: 6 
    region:
  
  prod1:            # TAP run profile installed
    name: 
    provider: 
    nodes: 3
    region:

  prod2:            # TAP run profile installed
    name: 
    provider: 
    nodes: 3
    region: 

  brownfield:       #for bronwfield apis demo, SCGW and TSM, no TAP installed
    name: 
    provider: 
    nodes: 2
    region: 

clouds:
  azure:
    subscriptionID:
    resourceGroup: 
    nodeType: Standard_DS3_v2 
  aws:
    accountID: 
    IAMuser: 
    instanceType: t3.xlarge
  gcp:
    projectID: 
    machineType: e2-standard-4

private_registry:
  host: 
  username: 
  password: 
  repo: 

tanzu_network:
  username: 
  password: 

tap:
  
  tapVersion: 1.6.1
  carvelBundle: sha256:54e516b5d088198558d23cababb3f907cd8073892cacfb2496bb9d66886efe15
  scanTemplates: #accepted values: carbonblack-private-image-scan-template snyk-private-image-scan-template, private-image-scan-template
    portal: snyk-private-image-scan-template 
    sensors: carbonblack-private-image-scan-template 
    doctor: snyk-private-image-scan-template 
    predictor: private-image-scan-template
    painter: carbonblack-private-image-scan-template 
  appsIngressIssuer:  # used for workloads, accepted values: tap-ingress-selfsigned or your own cert (in which case verify if you need to update .config/secrets/cluster-issue-apps.yaml)
  isvImg: #BYO image name, must be pushed to private_registry/isvs repo

snyk: 
  token: 

openai: 
  token: 

carbonblack:
  cbc_api_id: 
  cbc_api_key: 
  cbc_org_key: 
  cbc_saas_url: 

apps_namespaces:
  dev1:  #for mood-portal single dev workload
  dev2:  #for mood-sensors single dev workload
  team:  #for the DevXmood dev team (mood-portal, mood-sensors, mood-doctor and mood-predictor workloads)
  stageProd:  #for promoting the DevXmood business application to stage and prod

gitops: 
  
  server: #e.g https://github.com
  owner:
  token: #must have read/write permissions for all repos below repo
  resources: # repo must be created prior to installing the demo
    repo:
    # subPath needs to be created and contain at least the following resources: 
    # 1. scan-policy.yaml
    # 2. tekton-pipeline-golang.yaml
    # 3. tekton-pipeline-java.yaml
    # 4. tekton-pipeline-nodejs.yaml
    # 5. snyk-install.yaml !!make sure the snyk_values["metadataStore"] = {"url" value is updated
    # 6. carbonblack-install.yaml !!make sure the snyk_values["metadataStore"] = {"url" value is updated
    #
    # see example at https://github.com/dektlong/gitops-resources/tree/main/resources
    subPath:
  
  deliverables: # repos must be created prior to installing the demo and cloned to the same path as the demo install 
    devRepo:  # dev and team supplychains deliverables will be pushed to /config
    stageRepo: # stage supplychain deliverables will be pushed to /config

  
  

dns:
  domain: 
  sysSubDomain: 
  devSubDomain:
  stageSubDomain: 
  prod1SubDomain: 
  prod2SubDomain: 
  godaddyApiKey: 
  godaddyApiSecret: 

tmc:
  apiToken: 
  clusterGroup: 
