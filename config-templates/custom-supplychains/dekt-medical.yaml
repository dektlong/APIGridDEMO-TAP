#@ load("@ytt:data", "data")
---
apiVersion: carto.run/v1alpha1
kind: ClusterSupplyChain
metadata:
  name: dekt-medical
spec:
  params:
  - name: maven_repository_url
    value: https://repo.maven.apache.org/maven2
  - default: main
    name: gitops_branch
  - default: supplychain
    name: gitops_user_name
  - default: supplychain
    name: gitops_user_email
  - default: Generated by TAP on dev-mood cluster
    name: gitops_commit_message
  - default: #@ "Generated by dekt-medical custom supply chain on " + data.values.clusters.dev.name + " cluster" 
    name: gitops_ssh_secret
  - default: #@ data.values.gitops.server
    name: gitops_server_address
  - default: #@ data.values.gitops.owner
    name: gitops_repository_owner
  - default: #@ data.values.gitops.deliverables.devRepo
    name: gitops_repository_name
  resources:
  - name: source-provider
    params:
    - default: default
      name: serviceAccount
    - default: go-git
      name: gitImplementation
    templateRef:
      kind: ClusterSourceTemplate
      name: source-template
  - name: clinical-trials
    sources:
    - name: source
      resource: source-provider
    templateRef:
      kind: ClusterSourceTemplate
      name: testing-pipeline
  - name: patient-imaging
    params:
    - default: default
      name: serviceAccount
    - name: registry
      value:
        ca_cert_data: ""
        repository: #@ data.values.private_registry.repo + "/workloads"
        server: #@ data.values.private_registry.host
    - default: default
      name: clusterBuilder
    - default: ./Dockerfile
      name: dockerfile
    - default: ./
      name: docker_build_context
    - default: []
      name: docker_build_extra_args
    sources:
    - name: source
      resource: clinical-trials
    templateRef:
      kind: ClusterImageTemplate
      options:
      - name: kpack-template
        selector:
          matchFields:
          - key: spec.params[?(@.name=="dockerfile")]
            operator: DoesNotExist
      - name: kaniko-template
        selector:
          matchFields:
          - key: spec.params[?(@.name=="dockerfile")]
            operator: Exists
  - images:
    - name: image
      resource: patient-imaging
    name: hippa-configs
    params:
    - default: default
      name: serviceAccount
    templateRef:
      kind: ClusterConfigTemplate
      name: convention-template
  - configs:
    - name: config
      resource: hippa-configs
    name: app-config
    templateRef:
      kind: ClusterConfigTemplate
      options:
      - name: config-template
        selector:
          matchLabels:
            apps.tanzu.vmware.com/workload-type: dekt-medical
      - name: server-template
        selector:
          matchLabels:
            apps.tanzu.vmware.com/workload-type: dekt-medical-server
      - name: worker-template
        selector:
          matchLabels:
            apps.tanzu.vmware.com/workload-type: dekt-medical-worker
  - configs:
    - name: app_def
      resource: app-config
    name: medical-services
    templateRef:
      kind: ClusterConfigTemplate
      name: service-bindings
  - configs:
    - name: config
      resource: medical-services
    name: config-writer
    params:
    - default: default
      name: serviceAccount
    - name: registry
      value:
        ca_cert_data: ""
        repository: #@ data.values.private_registry.repo + "/workloads"
        server: #@ data.values.private_registry.host
    templateRef:
      kind: ClusterTemplate
      name: config-writer-template
  - name: deliverable
    params:
    - name: registry
      value:
        ca_cert_data: ""
        repository: #@ data.values.private_registry.repo + "/workloads"
        server: #@ data.values.private_registry.host
    - default: go-git
      name: gitImplementation
    templateRef:
      kind: ClusterTemplate
      name: deliverable-template
  selector:
    apps.tanzu.vmware.com/has-tests: "true"
  selectorMatchExpressions:
  - key: apps.tanzu.vmware.com/workload-type
    operator: In
    values:
    - dekt-medical
    - dekt-medical-server
    - dekt-medical-worker
